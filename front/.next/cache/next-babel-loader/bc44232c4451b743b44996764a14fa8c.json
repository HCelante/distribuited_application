{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hcelante/Documents/APS SD/distribuited_application/front/pages/components/graph/index.js\";\nimport { useState } from 'react';\nimport Chart from \"react-google-charts\";\n\nasync function getData() {\n  const url = \"http://127.0.0.1:5000/\";\n  const response = await fetch(url);\n  const result = await response.json();\n  return result;\n}\n\nconst graphStyle = {\n  backgroundColor: 'white'\n};\n\nfunction Graph() {\n  const {\n    0: charged,\n    1: setCharged\n  } = useState(0);\n  const {\n    0: myData,\n    1: setMyData\n  } = useState({});\n  const {\n    0: sentiments,\n    1: setSentiments\n  } = useState([]);\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n\n  async function collect() {\n    const url = \"http://127.0.0.1:5000/collect/\" + value;\n    fetch(url).then(() => {\n      console.log('response');\n    });\n  }\n\n  function getGraph() {\n    getData().then(response => {\n      setMyData(response);\n      countSentiments(response);\n    });\n  }\n\n  function countSentiments(myData) {\n    let sentiment = [0, 0, 0];\n    myData.forEach(element => {\n      sentiment[element[0]] += 1;\n    });\n    setSentiments(sentiment);\n  }\n\n  if (charged === 0) {\n    getGraph();\n    setCharged(1);\n  }\n\n  console.log(sentiments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"N\\xFAmero de Tweets que deseja buscar:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: value,\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => collect(),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: graphStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            width: '1000px',\n            height: '1000px',\n            chartType: \"PieChart\",\n            loader: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Carregando Gr\\xE1fico\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this),\n            data: [['Sentimento', 'Tweets'], ['Positivo', sentiments[1]], ['Negativo', sentiments[0]], ['Neutro', sentiments[2]]],\n            options: {\n              title: 'Análise Sentimental de tweets sobre o personagem Luffy de One Piece',\n              is3D: true\n            },\n            rootProps: {\n              'data-testid': '2'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Graph;","map":{"version":3,"sources":["/home/hcelante/Documents/APS SD/distribuited_application/front/pages/components/graph/index.js"],"names":["useState","Chart","getData","url","response","fetch","result","json","graphStyle","backgroundColor","Graph","charged","setCharged","myData","setMyData","sentiments","setSentiments","value","setValue","collect","then","console","log","getGraph","countSentiments","sentiment","forEach","element","e","target","title","is3D"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Chart from \"react-google-charts\";\n\nasync function getData() {\n    const url = \"http://127.0.0.1:5000/\"\n    const response = await fetch(url)\n    const result = await response.json()\n    return result\n}\n\n\nconst graphStyle = {\n    backgroundColor: 'white'\n};\n\nfunction Graph() {\n    const [charged, setCharged] = useState(0);\n    const [myData, setMyData] = useState({});\n    const [sentiments, setSentiments] = useState([]);\n    const [value, setValue] = useState(0);\n\n    async function collect(){\n        const url = \"http://127.0.0.1:5000/collect/\" + value\n        fetch(url).then(() =>{\n            console.log('response')\n        })\n\n    }\n\n    \n    function getGraph() {\n        getData().then(response => {\n            setMyData(response)\n            countSentiments(response)\n        })\n\n    }\n\n    function countSentiments(myData) {\n        let sentiment = [0, 0, 0]\n        myData.forEach(element => {\n            sentiment[element[0]] += 1\n        });\n        setSentiments(sentiment)\n    }\n\n    if (charged === 0) {\n        getGraph()\n        setCharged(1)\n    }\n\n    console.log(sentiments)\n    return (\n        <div>\n            <div>\n                <label>\n                    <h2>Número de Tweets que deseja buscar:</h2>\n                    <input type=\"text\" value={value} onChange={e =>  setValue(e.target.value)} />\n                </label>\n                <button onClick={() => collect()}>\n                    Update\n                </button>\n            </div>\n            <div style={graphStyle}>\n                <div>\n                    <div className=\"\">\n                        <Chart\n                            width={'1000px'}\n                            height={'1000px'}\n                            chartType=\"PieChart\"\n                            loader={<div>Carregando Gráfico</div>}\n                            data={[\n                                ['Sentimento', 'Tweets'],\n                                ['Positivo', sentiments[1]],\n                                ['Negativo', sentiments[0]],\n                                ['Neutro', sentiments[2]],\n                            ]}\n                            options={{\n                                title: 'Análise Sentimental de tweets sobre o personagem Luffy de One Piece',\n                                is3D: true\n                            }}\n                            rootProps={{ 'data-testid': '2' }}\n                        ></Chart>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n} export default Graph;\n"]},"metadata":{},"sourceType":"module"}