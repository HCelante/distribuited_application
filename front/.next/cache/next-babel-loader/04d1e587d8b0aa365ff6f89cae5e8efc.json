{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hcelante/Documents/APS SD/distribuited_application/front/pages/components/graph/index.js\";\nimport { useState } from 'react';\nimport Chart from \"react-google-charts\";\n\nasync function getData() {\n  const url = \"http://127.0.0.1:5000/\";\n  const response = await fetch(url);\n  const result = await response.json();\n  return result;\n}\n\nconst graphStyle = {\n  backgroundColor: 'white'\n};\n\nfunction Graph() {\n  const {\n    0: myData,\n    1: setMyData\n  } = useState({});\n  const {\n    0: sentiments,\n    1: setSentiments\n  } = useState([]);\n\n  function getGraph() {\n    getData().then(response => {\n      setMyData(response);\n      countSentiments(response);\n    });\n  }\n\n  function countSentiments(myData) {\n    let sentiment = [0, 0, 0];\n    myData.forEach(element => {\n      sentiment[element[0]] += 1;\n    });\n    setSentiments(sentiment);\n  }\n\n  console.log(sentiments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: graphStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          width: '1000px',\n          height: '1000px',\n          chartType: \"PieChart\",\n          loader: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Carregando Gr\\xE1fico\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this),\n          data: [['Sentimento', 'Tweets'], ['Positivo', sentiments[1]], ['Negativo', sentiments[0]], ['Neutro', sentiments[2]]],\n          options: {\n            title: 'Análise Sentimental de tweets sobre o personagem Luffy de One Piece',\n            // Just add this option\n            is3D: true\n          },\n          rootProps: {\n            'data-testid': '2'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\nexport default Graph;","map":{"version":3,"sources":["/home/hcelante/Documents/APS SD/distribuited_application/front/pages/components/graph/index.js"],"names":["useState","Chart","getData","url","response","fetch","result","json","graphStyle","backgroundColor","Graph","myData","setMyData","sentiments","setSentiments","getGraph","then","countSentiments","sentiment","forEach","element","console","log","title","is3D"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAQC,KAAR,MAAoB,qBAApB;;AAEA,eAAeC,OAAf,GAAyB;AACrB,QAAMC,GAAG,GAAG,wBAAZ;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,QAAMG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,SAAOD,MAAP;AACH;;AAED,MAAME,UAAU,GAAG;AACfC,EAAAA,eAAe,EAAE;AADF,CAAnB;;AAIA,SAASC,KAAT,GAAiB;AACb,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACa,UAAD;AAAA,OAAaC;AAAb,MAA8Bd,QAAQ,CAAC,EAAD,CAA5C;;AAGA,WAASe,QAAT,GAAoB;AAChBb,IAAAA,OAAO,GAAGc,IAAV,CAAeZ,QAAQ,IAAI;AACvBQ,MAAAA,SAAS,CAACR,QAAD,CAAT;AAEAa,MAAAA,eAAe,CAACb,QAAD,CAAf;AACH,KAJD;AAMH;;AAED,WAASa,eAAT,CAAyBN,MAAzB,EAAiC;AAC7B,QAAIO,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAhB;AACAP,IAAAA,MAAM,CAACQ,OAAP,CAAeC,OAAO,IAAI;AACtBF,MAAAA,SAAS,CAACE,OAAO,CAAC,CAAD,CAAR,CAAT,IAAyB,CAAzB;AACH,KAFD;AAGAN,IAAAA,aAAa,CAACI,SAAD,CAAb;AACH;;AAGDG,EAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACA,sBACI;AAAK,IAAA,KAAK,EAAEL,UAAZ;AAAA,2BACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,+BACA,QAAC,KAAD;AACI,UAAA,KAAK,EAAE,QADX;AAEI,UAAA,MAAM,EAAE,QAFZ;AAGI,UAAA,SAAS,EAAC,UAHd;AAII,UAAA,MAAM,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJZ;AAKI,UAAA,IAAI,EAAE,CACF,CAAC,YAAD,EAAe,QAAf,CADE,EAEF,CAAC,UAAD,EAAaK,UAAU,CAAC,CAAD,CAAvB,CAFE,EAGF,CAAC,UAAD,EAAaA,UAAU,CAAC,CAAD,CAAvB,CAHE,EAIF,CAAC,QAAD,EAAWA,UAAU,CAAC,CAAD,CAArB,CAJE,CALV;AAWI,UAAA,OAAO,EAAE;AACLU,YAAAA,KAAK,EAAE,qEADF;AAEL;AACAC,YAAAA,IAAI,EAAE;AAHD,WAXb;AAgBI,UAAA,SAAS,EAAE;AAAE,2BAAe;AAAjB;AAhBf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;AAAC,eAAed,KAAf","sourcesContent":["import { useState } from 'react';\nimport  Chart  from \"react-google-charts\";\n\nasync function getData() {\n    const url = \"http://127.0.0.1:5000/\"\n    const response = await fetch(url)\n    const result = await response.json()\n    return result\n}\n\nconst graphStyle = {\n    backgroundColor: 'white'\n};\n\nfunction Graph() {\n    const [myData, setMyData] = useState({});\n    const [sentiments, setSentiments] = useState([]);\n\n\n    function getGraph() {\n        getData().then(response => {\n            setMyData(response)\n\n            countSentiments(response)\n        })\n\n    }\n\n    function countSentiments(myData) {\n        let sentiment = [0, 0, 0]\n        myData.forEach(element => {\n            sentiment[element[0]] += 1\n        });\n        setSentiments(sentiment)\n    }\n\n\n    console.log(sentiments)\n    return (\n        <div style={graphStyle}>\n            <div>\n                <div className=\"\">\n                <Chart\n                    width={'1000px'}\n                    height={'1000px'}\n                    chartType=\"PieChart\"\n                    loader={<div>Carregando Gráfico</div>}\n                    data={[\n                        ['Sentimento', 'Tweets'],\n                        ['Positivo', sentiments[1]],\n                        ['Negativo', sentiments[0]],\n                        ['Neutro', sentiments[2]],\n                    ]}\n                    options={{\n                        title: 'Análise Sentimental de tweets sobre o personagem Luffy de One Piece',\n                        // Just add this option\n                        is3D: true,\n                    }}\n                    rootProps={{ 'data-testid': '2' }}\n                ></Chart>\n                </div>\n            </div>\n        </div>\n    )\n\n} export default Graph;\n"]},"metadata":{},"sourceType":"module"}